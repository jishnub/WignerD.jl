var documenterSearchIndex = {"docs":
[{"location":"","page":"WignerD","title":"WignerD","text":"DocTestSetup  = quote\n    using WignerD\nend","category":"page"},{"location":"#WignerD.jl","page":"WignerD","title":"WignerD.jl","text":"","category":"section"},{"location":"","page":"WignerD","title":"WignerD","text":"Wigner D matrices computed using the phase convention of Varshalovich et al. (1988). In this conevntion, wavefucntions transform under rotation as","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"psi_jm(hatn) = sum_m^prime=-j^j D^j*_mm^prime(alphabetagamma) psi_jm^prime(hatn^prime)","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"where alpha, beta and gamma are the Euler angles corresponding to the rotation. The Wigner D -matrix is related to the d-matrix through","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"D^j_mm^prime(alphabetagamma) = d^j_mm^prime(beta) exp(-i(malpha + m^primegamma))","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"Modules = [WignerD]","category":"page"},{"location":"#WignerD.Equator","page":"WignerD","title":"WignerD.Equator","text":"Equator\n\nAlias for β = π/2 in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.NorthPole","page":"WignerD","title":"WignerD.NorthPole","text":"NorthPole\n\nAlias for β = 0 in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.SouthPole","page":"WignerD","title":"WignerD.SouthPole","text":"SouthPole\n\nAlias for β = π in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.wignerD","page":"WignerD","title":"WignerD.wignerD","text":"wignerD(j, α::Real, β::Real, γ::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner D-matrix with elements D^j_mn(αβγ) for the angular momentum j and the Euler angles α, β and γ. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerD!","page":"WignerD","title":"WignerD.wignerD!","text":"wignerD!(D, j, α::Real, β::Real, γ::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner D-matrix with elements D^j_mn(αβγ) for the angular momentum j and the Euler angles α, β and γ, and store the result in D. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerDjmn-Tuple{Any, Any, Any, Real, Real, Real, Vararg{Any, N} where N}","page":"WignerD","title":"WignerD.wignerDjmn","text":"wignerDjmn(j, m, n, α::Real, β::Real, γ::Real, [Jy::AbstractMatrix{ComplexF64}])\n\nEvaluate the Wigner D-matrix element D^j_mn(alphabetagamma). Optionally a pre-allocated matrix Jy may be provided, which must be of size (2j+1, 2j+1).\n\n\n\n\n\n","category":"method"},{"location":"#WignerD.wignerd","page":"WignerD","title":"WignerD.wignerd","text":"wignerd(j, β::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner d-matrix with elements d^j_mn(β) for the angular momentum j and the rotation angle β. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerd!","page":"WignerD","title":"WignerD.wignerd!","text":"wignerd!(d, j, β::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner d-matrix with elements d^j_mn(β) for the angular momentum j and the rotation angle β, and store the result in d. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerdjmn-Tuple{Any, Any, Any, Real}","page":"WignerD","title":"WignerD.wignerdjmn","text":"wignerdjmn(j, m, n, β::Real, [Jy::AbstractMatrix{ComplexF64}])\n\nEvaluate the Wigner d-matrix element d^j_mn(β). Optionally a pre-allocated matrix Jy may be provided, which must be of size (2j+1, 2j+1).\n\n\n\n\n\n","category":"method"}]
}
