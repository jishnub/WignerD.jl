var documenterSearchIndex = {"docs":
[{"location":"","page":"WignerD","title":"WignerD","text":"DocTestSetup  = quote\n    using WignerD\nend","category":"page"},{"location":"#WignerD.jl","page":"WignerD","title":"WignerD.jl","text":"","category":"section"},{"location":"#Definition","page":"WignerD","title":"Definition","text":"","category":"section"},{"location":"","page":"WignerD","title":"WignerD","text":"The Wigner D matrix is the matrix representation of the rotation operator in the eigenbasis of the angular momentum operator J_z. Representing a general eigenvector of J_z as leftjmrightrangle and given a rotation operator U(R), we obtain D_mm^prime^jleft(Rright)=leftlangle jmrightUleft(Rright)leftjm^primerightrangle. If we represent the rotation in terms of Euler angles, we obtain Uleft(Rright)=e^-i J_z alphae^-i J_y betae^-i J_z gamma. In this representation, we obtain","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"beginaligned\nD_mm^prime^jleft(alphabetagammaright)=e^-ileft(malpha+m^primegammaright)leftlangle jmrighte^-iJ_ybetaleftjm^primerightrangle =e^-ileft(malpha+m^primegammaright)d_mm^prime^jleft(betaright)\nendaligned","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"where d_mm^prime^jleft(betaright) is the Wigner d matrix.","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"We use the phase convention of Varshalovich et al. (1988). In this conevntion, wavefunctions transform under a rotation of coordinate frames as","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"psi_jm^primeleft(theta^primephi^primesigma^primeright)=sum_mpsi_jmleft(thetaphisigmaright)D_mm^prime^jleft(alphabetagammaright)","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"where alpha, beta and gamma are the Euler angles corresponding to the rotation, (thetaphi) and (theta^primephi^prime) are the polar coordinates in the initial and rotated coordinate systems S and S^prime, and sigma and sigma^prime are the spin variables in S and S^prime respectively.","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"In this package we evaluate the Wigner d matrix following Feng (2015). We diagonalize the operator J_y to obtain its eigenbasis leftj _ynrightrangle. In terms of these, we may obtain","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"beginaligned\nd_mm^prime^ellleft(betaright)=leftlangle jmrighte^-iJ_ybetaleftjm^primerightrangle =leftlangle jmj_yprightrangle leftlangle j_yprighte^-iJ_ybetaleftj_ynrightrangle leftlangle j_ynjm^primerightrangle =e^-inbetaleftlangle jmj_ynrightrangle leftlangle j_ynjm^primerightrangle \nendaligned","category":"page"},{"location":"#Rotations-of-unit-vectors","page":"WignerD","title":"Rotations of unit vectors","text":"","category":"section"},{"location":"","page":"WignerD","title":"WignerD","text":"The rotation of a vector may be described in terms of a rotation operator U(R) as U(R)mathbfx=mathbfy. In particular, for the Cartesian unit vectors (mathbfe_xmathbfe_ymathbfe_z) we obtain U(R)mathbfe_i = mathbfe^prime_i, where mathbfe^prime_i are the set of rotated unit vectors. In index notation, we may express this as a matrix relation R_ijmathbfe_i = mathbfe^prime_j. Note that the rows of R are summed over here, and not columns. The matrix elements R_ij=leftlangle mathbfe_irightUleft(Rright)leftmathbfe_jrightrangle are given by R_ij=leftlangle mathbfe_imathbfe_j^primerightrangle, and the operator U(R) may be expressed in the Cartesian basis as Uleft(Rright)=leftmathbfe_j^primerightrangle leftlangle mathbfe_jright=leftlangle mathbfe_imathbfe_j^primerightrangle leftmathbfe_irightrangle leftlangle mathbfe_jright.","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"Often in the analysis of rotation and spherical harmonics, it is convenient to switch to a basis that is referred to as the \"spherical covariant\" basis by Varshalovich, and is related to the Cartesian basis through a unitary transformation:","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"beginaligned\nchi_-1  =frac1sqrt2left(mathbfe_x-imathbfe_yright)\nchi_0  =mathbfe_z\nchi_1  =-frac1sqrt2left(mathbfe_x+imathbfe_yright)\nendaligned","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"These vectors form an eigenbasis of the angular momentum operator J_z for j=1. The rotation of these are also carried out by the same operator: U(R)chi_ν = chi^prime_ν. In index notation this may be represented as D^1(R)_numuchi_ν = chi^prime_mu, where, as before, the rows of D are summed over. The Wigner D matrix D^1(R) is therefore the matrix representation of the rotation operator in the spherical basis chi_ν.","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"If we denote the transformation between the Cartesian and spherical covariant bases as a matrix relation chi_μ = U_mu i mathbfe_i, the relation between the Wigner D matrix D^1_munu(R) and the Cartesian Rotation matrix R_ij is","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"(D^1(R))^* = U R U^dagger","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"The conjugation here is a consequence of the fact that U has its columns summed over, whereas R and D have their rows summed over. If we choose the transpose V=U^T, we may rewrite the relation as","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"D^1(R) = V^dagger R V","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"We may also derive this using the bra-ket notation as:","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"beginaligned\nD_munu^1left(Rright)  =leftlangle chi_murightUleft(Rright)leftchi_nurightrangle \n  =leftlangle chi_mumathbfe_irightrangle leftlangle mathbfe_irightUleft(Rright)leftmathbfe_jrightrangle leftlangle mathbfe_jchi_nurightrangle \n  =U_imu^daggerR_ijU_nu j\n  =U_mu i^*R_ijU_jnu^T\n  =leftU^*RU^Tright_munu\nendaligned","category":"page"},{"location":"#Rotation-of-Spherical-harmonics","page":"WignerD","title":"Rotation of Spherical harmonics","text":"","category":"section"},{"location":"","page":"WignerD","title":"WignerD","text":"Spherical harmonics Y_ℓm(hatn) form an eigenbasis of J_z for j=ell. We assume that a rotation R takes the coordinate frame S to S^prime. We assume that a point has coordinates hatn=(thetaphi) in S and hatn^prime=(theta^primephi^prime) in S^prime, where hatn^prime=R^-1hatn. Under this rotation, spherical harmonics transform as","category":"page"},{"location":"","page":"WignerD","title":"WignerD","text":"beginaligned\nY_ell m^primeleft(hatn^primeright)=sum_mD_mm^prime^ellleft(Rright)Y_ell mleft(hatnright)=sum_mD_mm^prime^ellleft(Rright)Y_ell mleft(R^-1hatn^primeright)\nendaligned","category":"page"},{"location":"#Reference","page":"WignerD","title":"Reference","text":"","category":"section"},{"location":"","page":"WignerD","title":"WignerD","text":"Modules = [WignerD]","category":"page"},{"location":"#WignerD.Equator","page":"WignerD","title":"WignerD.Equator","text":"Equator\n\nAlias for β = π/2 in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.NorthPole","page":"WignerD","title":"WignerD.NorthPole","text":"NorthPole\n\nAlias for β = 0 in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.SouthPole","page":"WignerD","title":"WignerD.SouthPole","text":"SouthPole\n\nAlias for β = π in spherical polar coordinates.\n\n\n\n\n\n","category":"type"},{"location":"#WignerD.wignerD","page":"WignerD","title":"WignerD.wignerD","text":"wignerD(j, α::Real, β::Real, γ::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner D-matrix with elements D^j_mn(αβγ) for the angular momentum j and the Euler angles α, β and γ. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerD!","page":"WignerD","title":"WignerD.wignerD!","text":"wignerD!(D, j, α::Real, β::Real, γ::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner D-matrix with elements D^j_mn(αβγ) for the angular momentum j and the Euler angles α, β and γ, and store the result in D. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerDjmn-Tuple{Any, Any, Any, Real, Real, Real, Vararg{Any}}","page":"WignerD","title":"WignerD.wignerDjmn","text":"wignerDjmn(j, m, n, α::Real, β::Real, γ::Real, [Jy::AbstractMatrix{ComplexF64}])\n\nEvaluate the Wigner D-matrix element D^j_mn(alphabetagamma). Optionally a pre-allocated matrix Jy may be provided, which must be of size (2j+1, 2j+1).\n\n\n\n\n\n","category":"method"},{"location":"#WignerD.wignerd","page":"WignerD","title":"WignerD.wignerd","text":"wignerd(j, β::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner d-matrix with elements d^j_mn(β) for the angular momentum j and the rotation angle β. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerd!","page":"WignerD","title":"WignerD.wignerd!","text":"wignerd!(d, j, β::Real, [Jy = zeros(ComplexF64, 2j+1, 2j+1)])\n\nEvaluate the Wigner d-matrix with elements d^j_mn(β) for the angular momentum j and the rotation angle β, and store the result in d. The momentum j may be an integer or a half-integer, and must be non-negative. Optionally the pre-allocated matrix Jy may be provided, which must be a ComplexF64 matrix of size (2j+1, 2j+1), and may be overwritten during the calculation.\n\n\n\n\n\n","category":"function"},{"location":"#WignerD.wignerdjmn-Tuple{Any, Any, Any, Real}","page":"WignerD","title":"WignerD.wignerdjmn","text":"wignerdjmn(j, m, n, β::Real, [Jy::AbstractMatrix{ComplexF64}])\n\nEvaluate the Wigner d-matrix element d^j_mn(β). Optionally a pre-allocated matrix Jy may be provided, which must be of size (2j+1, 2j+1).\n\n\n\n\n\n","category":"method"}]
}
